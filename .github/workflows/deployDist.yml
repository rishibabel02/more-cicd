name: Deploy Dist
# on: [push, workflow_dispatch] 
# can be written in both ways (but If I have to specify a trigger on a particular branch then this syntax can't be used)
on: 
    push:
        branches:
            - main
            - 'feature/**'
        paths-ignore:
            - '.github/workflows/*'
            - README.md
    workflow_dispatch:
  
jobs:
    test:
        runs-on: ubuntu-latest
        steps: 
            - name: Get Code
              uses: actions/checkout@v4
            #   run: |
            #     echo "Cloning Repo..."
            #     echo "${{toJson(github)}}"
            #     git clone https://github.com/${{github.repository}}.git

            - name: Install Node.js
              uses: actions/setup-node@v4
              with: 
                node-version: 18

            # - name: Node Version
            #   run: node -v

            # cache dependencies so that they need not to be installed again
            - name: Cache dependencies
              uses: actions/cache@v4 
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}


            - name: Install dependencies
              run: npm ci #clean install 
              
            - name: Run tests
              run: npm run test

            #   this is a comment 

    build:
        needs: test
        runs-on: ubuntu-latest
        steps:
            - name: Get Code
              uses: actions/checkout@v4

            - name: Install Node.js
              uses: actions/setup-node@v4
              with: 
                node-version: 18
            
            - name: Cache dependencies
              uses: actions/cache@v4 
              with:
                path: ~/.npm
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

            - name: Install dependencies
              run: npm ci  
              
            - name: Build Project
              run: npm run build 

#   build always generates a file(log, .apk, .exe, etc.) , these files are known as artifacts i.e assest generated during automation.

            - name: Upload Dist Artifact
              uses: actions/upload-artifact@v4
              with:
                name: dist-files
                path: dist

  

    deploy:
        needs: build
        runs-on: ubuntu-latest
        steps: 
            - name: Download Dist Artifact
              uses: actions/download-artifact@v4
              with:
                name: dist-files
                path: dist

            - name: Deploy
              run: echo "deploy sucess!"
